apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'
apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "com.github.houbie:lesscss-gradle-plugin:1.0.3-less-1.7.0"
    }
}

eclipse {
    classpath {
        file {
            whenMerged { cp ->
                // Add sources to a classpath entry
                def fileReferenceFactory = new org.gradle.plugins.ide.eclipse.model.internal.FileReferenceFactory()

                def entry = cp.entries.find{ entry -> entry.path.endsWith('snap-0.1.jar') }
                // add javadoc jar
                entry.javadocPath = fileReferenceFactory.fromPath('libs/snap-0.1-javadoc.jar')
                entry.sourcePath = fileReferenceFactory.fromPath('libs/snap-0.1-sources.jar')
            }
        }
    }
}

apply plugin: "lesscss"

def environment = hasProperty( 'env' ) ? env : 'dev'
System.setProperty('environment',environment)

sourceSets.main.resources.srcDirs = [ 
              'src/main/resources/global',
              "src/main/resources/${environment}"
               ]
               
sourceCompatibility = 1.8
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Blog', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
    flatDir {
      dirs 'libs'
    }
}

configurations.create('enhance')

dependencies {
    compile  'org.rythmengine:rythm-engine:1.0.1',
    		 'org.slf4j:slf4j-api:1.7.7',
             'org.slf4j:slf4j-log4j12:1.7.7',
             'log4j:log4j:1.2.17',
			 'org.jruby.joni:joni:2.1.4'
    compile name: 'snap-0.1'
// this section prevents libs from being included the WAR file
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    testCompile 'junit:junit:4.+' 
}

test {
    systemProperties 'property': 'value'
}

lessc {
    sourceDir "src/main/less"
    include "**/*.less"
    exclude "imports/**/*"
    destinationDir = "src/main/webapp/css"
}

afterEvaluate { project ->
  project.tasks.prepareInplaceWebApp << {
    println "Copying ${environment} files"
    def folderCollection = files( "${project.buildDir}/inplaceWebapp/META-INF",
                            "${project.buildDir}/inplaceWebapp/WEB-INF" )
    folderCollection.each { File folder ->
      if (!folder.exists()) {
        folder.mkdirs()
      }
    }
    copy {
      from "src/main/webxml/jetty9-env-${environment}.xml"
      into "${project.buildDir}/inplaceWebapp/META-INF"
      rename { "jetty9-env.xml" }
    }
    copy {     
      from "src/main/webxml/web-${environment}.xml"
      into "${project.buildDir}/inplaceWebapp/WEB-INF"
      rename { "web.xml" }
    }    
  }
}

gretty {
  // supported values:
  // 'jetty7', 'jetty8', 'jetty9', 'tomcat7', 'tomcat8'
  contextPath = '/'
  servletContainer = 'jetty9'
  httpPort = 9100
}


war {
    it.dependsOn lessc
     webXml = file("src/main/webxml/web-${environment}.xml")
}
